option pass_before_goal
{
	state check
	{
	decision
	{
		if( between(value=ball.position.field.y,min=-2000,max=-1100) )
			goto align_behind_ball_right;
		else if(between(value=ball.position.field.y,min=1100,max=2000))
			goto align_behind_ball_left;
		else 
			stay;
	}
	action{}
	}

	
	state decide_kick
 	{
    decision
    {
      if(ball.y > -45&&ball.y<-30)
      {
        goto look_before_kick_right;
       }
      else if(ball.y<45&&ball.y>30)
       {
        goto look_before_kick_left;
       }
	   else
	   {
		stay;
	   }
   }
 action
 {  
  motion.type = walk;
  motion.walk_target.x = ball.x-220;
  motion.walk_speed.x = 10;
  motion.walk_speed.y = ball.y>0?-30:30;
  motion.walk_speed.rot = 0;
  head.control_mode =  look_at_ball;
 }
 }


	 state align_behind_ball_left
 	{
 	decision
 	{    
      if( between(value = locator.pose.angle,min=-135 ,max=-125 ) )
      { 
    	   goto decide_kick;
      }
      else
      {
    	   stay;
      }
    }
 /*   action
    { 
        head.control_mode = look_at_ball;
        motion.type = walk;
        motion.walk_target.x = ball.x-5;
        motion.walk_target.y = 20;
        motion.walk_speed.rot = -5;
    }*/
    
    action
    {
      motion.type = walk;
      motion.walk_target.x = ball.x - 220;
      motion.walk_target.y = ball.y - 30;
      motion.walk_target.rot = 10;
      motion.walk_speed = 80;
      head.control_mode = look_at_ball;
    }
	}




	state align_behind_ball_right
 	{
 	decision
 	{    
      if( between(value = locator.pose.angle,min=125 ,max=135 ) )
      {
    	   goto decide_kick;
      }
      else
      {
    	   stay;
      }
    }
    action
    {
      motion.type = walk;
      motion.walk_target.x = ball.x - 220;
      motion.walk_target.y = ball.y - 30;
      motion.walk_target.rot = 10;
      motion.walk_speed = 80;
      head.control_mode = look_at_ball;
    }
	}


	state look_before_kick_right
 	{
    decision
    {
 /*   if(obstacle.distance_to_closest_center<=300)
	{
		if((locator.pose.angle>0)&&(locator.pose.angle<90))
          goto side_kick_right;
		else 
		  goto side_kick_left;
    
	}*/
	 if(state_time > 1000 && motion.kick_forward( x = ball.x, y = ball.y, mirror = false, updates = false))
     {
          goto kick;
     }
 else
 {
 stay;
 }
 }
 action
 { 
 head.control_mode = look_at_ball; 
 motion.type = stand;
 }
 }


 
 state look_before_kick_left
 {
   decision
   {
   /*    if(obstacle.distance_to_closest_center<=300)
	{
		if((locator.pose.angle>0)&&(locator.pose.angle<90))
          goto side_kick_right;
		else 
		  goto side_kick_left;
    
	}*/
       if(state_time > 1000 && motion.kick_forward( x = ball.x+2000, y = ball.y+2000, mirror = true, updates = false))
          goto kick;
    
 		else
 		  stay;
 	}
 	action
 	{ 
 		head.control_mode = look_at_ball; 
 		motion.type = stand;
 	}
 }



 state kick
 {
 	decision 
	{
		if(state_time>4000)
  			 goto decide_kick;
		else 
  			 stay;

	}
 	action
 	{
 		  motion.type = bike;
 	}
 }
 
 
 
 initial state start
   {
 decision
 {
 if(abs(value = ball.angle) < 5)
 {
 goto go;
 }
 else
 {
 stay;
 }
 }
 action
 {
 motion.type = walk;
    motion.walk_speed.y = 0;
    motion.walk_speed.rot = ball.angle; 
    motion.walk_speed.x = 0; 
    head.control_mode =  look_at_ball;
    
    }
   }



  state go
  {decision
  {
  	if(ball.x<240)
  		goto check;
  		else 
  		stay;
  
  }

  action
  {
      motion.type = walk;
      motion.walk_target.x = ball.x;
      motion.walk_target.y = ball.y;
      motion.walk_target.rot = ball.angle;
      motion.walk_speed = ball.x<400?25:80;
      head.control_mode = state_time % 2000 < 1000 ? look_at_ball : look_up_and_down;
   }
 }
 
 
 
}